'''
정규 표현식(regular expression): 복잡한 문자열을 처리할 때 사용하는 기법
정규 표현식에서는 메타문자를 사용하는데, 메타문자란 그 문자가 가진 뜻이 아니라 특별한 의미를 가진 문자를 말한다.
메타문자의 종류 : . ^ $ * + {} [] \ | ()
1.[]
문자클래스로 만들어진 정규식은 '['와 ']'사이의 문자들과 매치라는 의미를 가진다.
[abc]라면 a,b,c중 하나라도 가지고 있는 문자는 다 일치한다.
이걸 다르게 표현하면 [a-c]가 되고, 숫자도 가능하다.
[a-zA-Z]는 모든 알파벳을 뜻한다.
2.^
^가 문자클래스 내에 쓰이는 경우에는 Not의 의미를 가지고 있다.
[^1-3]일 경우 1-3빼고 다를 얘기한다.

^는 문자열이 맨처음에 온 경우를 나타내며 , 처음위치가 아닌 경우에는 매치되지 않는다.

3. .
\n을 제외한 모든 문자와 매치된다는 것을 의미한다.
a.b일 경우 a와 b사이에 모든 문자가 들어와도 일치한다는 것을 뜻한다.
a[.]b로 쓰면 a와 b사이에 .이 있을 때만 일치하는 것이므로 유의

4. *
*은 *바로 앞에 있는 문자가 무한대까지 반복될 수 있다는 것을 의미한다.

5.{} 와 ?
{}는 반복횟수를 고정할 때 사용하며 {3,}일 경우 반복횟수가 3회이상, {,3}은 반복횟수가 3회 이하인 경우
{2,5}반복횟수가 2회에서 5회 사이
?이 의마하는 것은 ?아프이 문자가 있어도 매치가 되고 없어도 매치가 된다는 뜻이다.

6.$
문자열의 끝과 매치한다는 것을 의미

7.\A
문자열의 처음과 매치되는 것을 의미한다.
re.MULTILINE과 함께 쓰일 경우 줄과 상관없이 전체 문자열의 처음하고만 매치 된다.
^는 각 줄의 문자열의 처음과 매치된다.

8.\Z
문자열의 맨마지막과 매치된다.
re.MULTILINE과 함께 쓰일 경우 줄과 상관없이 전체물자열의 마지막과 매치뇐다.

9.\b
단어 구분자로 쓰인다. \bstr\b str이 화이트스페이스(빈칸)으로 구분된다고 표현

10.\B
화이트 스페이스가 하나라도 있으면 매치되지 않는다.

11.그루핑
str문자열이 계속 반복되는지 조사하는 정규식을 작성할 때 쓰인다.
(str)+

12.전방 탐색
긍정형 전방탐색(?=...): ...에 해당하는 정규식과 매치되어야 하며 조건이 통과하여도 문자열이 소비되지 않는다.
부정형 전방탐색(?!...): ...에 해당하는 정규식과 매치되지 않아야 하며 조건이 통과하여도 문자열이 소비되지 않는다.

13.문자열 바꾸기
sub(바꿀문자열, 기존문자열)

*자주 사용되는 정규식의 표기
\d == [0-9]
\D == [^0-9]
\s == [ \t\n\r\f\v] 모든 문자와 일치되며, 맨 앞의 빈칸은 공백문자를 의미한다.
\S == [^ \t\n\r\f\v]
\w == [a-zA-Z0-9_] 모든 숫자와 문자와 매치
\W == [^a-zA-Z0-9_]

[re모듈]
파이썬은 정규 표현식을 지원하기 위해 re모듈을 제공한다.
1.메서드
[1]match : 문자열의 처음부터 정규식과 매치되는지 조사한다.
-group() : 매치된 문자열을 리턴
-start() : 매치된 문자열의 시작 위치를 리턴 
-end() : 매치된 문자열의 끝 위치를 리턴
-span() : 매치된 문자열에 해당하는 튜플을 리턴
[2]search : 문자열 전체를 검색하여 정규식과 매치되는지 조사한다.
[3]findall : 정규식과 매치되는 모든 문자열을 리스트로 리턴한다.
[4]finditer : 정규식과 매치되는 모든 문자열을 이터레이터 객체로 리턴한다.
2.컴파일 옵션
[1]DOTALL - S(약어) : .이 줄바꿈 문자를 포함해 모든 문자와 매치될 수 있게 한다.
[2]IGNORECASE - I(약어) :대소문자에 관계없이 매치
[3]MULTILINE - M(약어) : 여러줄과 매치될 수 있게 한다.
[4]VERBOSE - X(약어) : 정규식을 보기 편하게 만들 수 있고 주석을 사용할 수 있는 verbose모드를 사용

*역슬래시 \section과 일치하려면 \\section 또는 r'\section'으로 나타낸다.
'''